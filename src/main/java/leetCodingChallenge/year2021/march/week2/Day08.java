package leetCodingChallenge.year2021.march.week2;

/**
 * @author Anna S. Almielka
 * 08.03.2021
 */

public class Day08 {

    /**
     * Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.
     * Return the minimum number of steps to make the given string empty.
     * A string is a subsequence of a given string, if it is generated by deleting
     * some characters of a given string without changing its order.
     * A string is called palindrome if is one that reads the same backward as well as forward.
     * <p>
     * Constraints:
     * 0 <= s.length <= 1000
     * s only consists of letters 'a' and 'b'
     *
     * @param s a string
     * @return the minimum number of steps
     */
    // Runtime: 0 ms
    // Memory Usage: 37 MB
    // Time complexity: O(n)
    // Space complexity: O(1)
    public int removePalindromeSub(String s) {
        if (s.isEmpty()) return 0;
        for (int i = 0, j = s.length() - 1; i < j; i++, j--) {
            if (s.charAt(i) != s.charAt(j)) {
                return 2;
            }
        }
        return 1;
    }

}
